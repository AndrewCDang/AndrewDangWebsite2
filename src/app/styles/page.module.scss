@import "colours";
@import "breakpoints";
@import "_mixins";

.red {
    color: $col-red;
}
.blue {
    color: $col-blue;
}
.yellow {
    color: $col-yellow;
}

.main {
    width: 100%;
}

.container {
    position: relative;
    height: 200vh;
    overflow: clip;
    width: 100%;
    z-index: -1;
}

.landing {
    position: fixed;
    top: 0;
    display: flex;
    width: 100%;

    height: calc(100vh);
}
.landingBg {
    height: 100vh;
    width: 100vw;
    background-image: url("/svgs/grid-svg.svg");
    background-repeat: repeat;
    background-size: 300px 300px;
    -webkit-mask: {
        mask: linear-gradient(90deg, transparent, white 20%, white 80%);
    }
    mask: linear-gradient(0deg, transparent, white 20%, white 80%, transparent);
}
.body {
    position: absolute;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-self: center;
    justify-self: center;
    height: 100%;
    justify-content: center;
    z-index: -1;

    & > div {
        @include gridBox;
        width: 100%;
        max-width: unset;
        & > div {
            width: 100%;
            grid-column: 2/-2;
        }
    }

    h1 {
        font-weight: 800;

        font-size: clamp(
            2.4em,
            1.5rem + 2.5vw,
            5rem
        ); /* Increased minimum and maximum by 2rem */
        line-height: clamp(
            3.8rem,
            3.2rem + 2.5vw,
            5.6rem
        ); /* Increased minimum and maximum by 2rem */
    }

    h3 {
        font-size: clamp(
            2rem,
            1.5rem + 1.75vw,
            3.5rem
        ); /* Increased minimum and maximum by 2rem */
        line-height: clamp(
            2.8rem,
            2.2rem + 1.75vw,
            3.7rem
        ); /* Increased minimum and maximum by 2rem */
    }

    p {
        font-size: clamp(
            1rem,
            0.8rem + 1vw,
            1.4rem
        ); /* Increased minimum and maximum by 2rem */
        line-height: clamp(
            1.2rem,
            1rem + 1vw,
            1.6rem
        ); /* Increased minimum and maximum by 2rem */
    }

    p,
    h3,
    h1 {
        width: fit-content;
    }
}

.svgContainer {
    display: flex;
    height: 100%;
    z-index: -1;
    position: relative;
}

// Legacy Next Styles
.center {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    padding: 4rem 0;
}

.center::before {
    background: var(--secondary-glow);
    border-radius: 50%;
    width: 480px;
    height: 360px;
    margin-left: -400px;
}

.center::after {
    background: var(--primary-glow);
    width: 240px;
    height: 180px;
    z-index: -1;
}

.center::before,
.center::after {
    content: "";
    left: 50%;
    position: absolute;
    filter: blur(45px);
    transform: translateZ(0);
}

.logo {
    position: relative;
}

.other {
    // background-image: url("/svgs/skewed-grid.svg");
    // background-repeat: repeat;
    background-size: 300px 300px;
    padding-bottom: 6rem;
}

.lines {
    display: flex;
    flex-wrap: wrap;
    width: fit-content;
    .jobTitle {
        font-size: clamp(1.6rem, calc(0.5rem + 5vw), 4.5rem);
        line-height: clamp(1.6rem, calc(0.5rem + 5vw), 4.5rem);
    }
}
.linesSection {
    display: flex;
    flex-wrap: wrap;
}
.sharedLines {
    display: flex;
}

.linesContainer {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.bottomPointer {
    width: 2rem;
    transform: rotate(90deg);
    fill: $col-white;
    & > div {
        transform: rotate(90deg);
    }
    @include bouncingAnimationData;
}

.bottomContainer {
    position: sticky;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    width: 100%;
    align-items: center;
    top: 15rem;
    padding-top: 15rem;
    @include breakpoint-mobile {
        @media (hover: none) and (pointer: coarse) {
            /* ... */

            padding-top: 12rem;
        }
    }
}

.title {
    position: relative;
    width: 100%;
    height: fit-content;
    color: $col-white;
    text-align: center;
    & > div {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .summaryContainer {
        text-align: start;
        display: flex;
        flex-direction: column;
        gap: 2rem;
        padding-top: 3rem;
        padding-bottom: 3rem;
        max-width: 800px;
        padding-left: 1rem;
        padding-right: 1rem;
        margin-left: 1rem;
        margin-right: 1rem;

        .summaryLine {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-weight: 600;
            img {
                height: clamp(3rem, calc(1rem + 3vw), 5rem);
                aspect-ratio: 1;
            }
        }
    }
}
.glow {
    z-index: 0;
    aspect-ratio: 0.75;
    width: 18rem;
    position: absolute;
    left: 5%;
    top: 50%;
    opacity: 0.35;
    transform: translateY(-50%);
    & > div {
        @include animation-rotate;
        width: 100%;
        height: 100%;
        background-image: $primary-glow;
        filter: blur(80px);
    }
}
.glow2 {
    z-index: 0;
    aspect-ratio: 0.75;
    width: 5rem;
    position: absolute;
    right: 30%;
    top: 80%;
    transform: translateY(-50%);
    & > div {
        @include animation-rotate;
        width: 100%;
        height: 100%;
        background-image: $primary-glow-3;
        animation-delay: 200;
        filter: blur(48px);
    }
}
.glow3 {
    z-index: 0;
    aspect-ratio: 1;
    width: 4rem;
    position: absolute;
    right: 5%;
    top: 160%;
    transform: translateY(-50%);
    & > div {
        @include animation-rotate;
        width: 100%;
        height: 100%;
        background-image: $primary-glow;
        animation-delay: 200;
        filter: blur(48px);
    }
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
    .card:hover {
        background: rgba(var(--card-rgb), 0.1);
        border: 1px solid rgba(var(--card-border-rgb), 0.15);
    }

    .card:hover span {
        transform: translateX(4px);
    }
}

@media (prefers-reduced-motion) {
    .card:hover span {
        transform: none;
    }
}
